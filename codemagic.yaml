scripts:
  - &get_app_version
    name: "Get RIA DigiDoc MOPP2 version"
    script: |
      echo APP_VERSION=$(xcodebuild -project $CM_BUILD_DIR/MoppApp/MoppApp.xcodeproj -showBuildSettings | grep MARKETING_VERSION | tr -d 'MARKETING_VERSION =') >> $CM_ENV
  - &get_google_services_plist
    name: "Get Google Services configuration"
    script: |
      echo $GOOGLE_SERVICES_PLIST | base64 --decode > $CM_BUILD_DIR/MoppApp/GoogleService-Info.plist

workflows:
  debug:
    name: RIA DigiDoc (MOPP2) dev
    max_build_duration: 120
    instance_type: mac_mini_m2
    integrations:
      app_store_connect: Codemagic MOPP
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: ee.ria.digidoc
      groups:
        - "google_services"
        - "repo_ria"
      vars:
        BUNDLE_ID: "ee.ria.digidoc"
        XCODE_SCHEME: "MoppApp"
        APP_STORE_APPLE_ID: ET847QJV9
        CONFIG_DIRECTORY: "MoppApp/MoppApp"
        APP_STORE_APP_ID: 1216104448
      xcode: latest
    inputs:
      defaultCentralConfigurationUrl_input:
        description: Default Central Configuration URL
        type: choice
        default: http://10.1.24.31/config/mobile
        options:
          - http://10.1.24.31/config/mobile
          - https://id.eesti.ee
          - https://id.test.eesti.ee
      defaultCentralConfigurationUpdateInterval_input:
        description: Default Central Configuration Update Interval
        type: number
        default: 4
      defaultCentralConfigurationTslUrl_input:
        description: Default Central Configuration TSL URL
        type: choice
        default: http://10.1.24.31/tsl/trusted-test-mp.xml
        options:
          - http://10.1.24.31/tsl/trusted-test-mp.xml
          - https://ec.europa.eu/tools/lotl/eu-lotl.xml
          - https://open-eid.github.io/test-TL/tl-mp-test-EE.xml
      memberTsl_input:
        description: TSL member lists
        type: string
        default: "EE;EE_T"
      buildParameters_input:
        description: |
          Build parameters
        type: string
        default: "-DDEBUG"
    scripts:
      - name: Setup dependencies
        script: |
          brew install swift-sh
      - *get_app_version
      - *get_google_services_plist
      - name: "Setup config and TSL files"
        script: |
          export TSL_FILES_DIRECTORY="$CONFIG_DIRECTORY/tslFiles.bundle"

          # Create config and TSL folders
          mkdir -p $TSL_FILES_DIRECTORY

          # Remove current files in tslFiles.bundle
          echo "Removing current TSL files"
          find $TSL_FILES_DIRECTORY -mindepth 1 ! -name ".gitignore" -delete

          # Download latest 'eu-lotl.xml' file"
          echo "Downloading latest 'eu-lotl.xml' file"
          wget "https://ec.europa.eu/tools/lotl/eu-lotl.xml" -P $TSL_FILES_DIRECTORY

          # Get repo.ria values from environmental variables, as CodeMagic doesn't have access to repo.ria domain
          if [[ "${{ inputs.defaultCentralConfigurationTslUrl_input }}" == *"10.1.24.31"* ]]; then
            echo "Using repo.ria configuration"
            echo $REPO_RIA_DEFAULT_PROPERTIES | base64 --decode > $CONFIG_DIRECTORY/defaultConfiguration.json
            echo $REPO_RIA_CONFIG | base64 --decode > $CONFIG_DIRECTORY/config.json
            echo $REPO_RIA_PUB_KEY | base64 --decode > $CONFIG_DIRECTORY/publicKey.pub
            echo $REPO_RIA_RSA | base64 --decode > $CONFIG_DIRECTORY/signature.rsa
            echo $REPO_RIA_TRUSTED_TEST_MP | base64 --decode > $TSL_FILES_DIRECTORY/trusted-test-mp.xml
            echo $REPO_RIA_TL_MP_TEST_EE | base64 --decode > $TSL_FILES_DIRECTORY/tl-mp-test-EE.xml
            # EE_T.xml is too large to use in environmental variable. Using compressed variant
            echo $REPO_RIA_EE_TSL | base64 --decode | gunzip > $TSL_FILES_DIRECTORY/EE_T.xml
          else
            echo "Not using repo.ria configuration"
          fi

          if [ -f "$TSL_FILES_DIRECTORY/eu-lotl.xml" ]; then
            echo "Getting TSL (local LOTL)"
            # Repo.ria TSL files already in assets folder, doesn't need to download separately anymore
            if [[ "${{ inputs.defaultCentralConfigurationTslUrl_input }}" == *"10.1.24.31"* ]]; then
              python3 scripts/TSLXMLDownloader.py --tslFile="$TSL_FILES_DIRECTORY/eu-lotl.xml" --countries="${{ inputs.memberTsl_input }}" --isDevBuild="True"
            else
              python3 scripts/TSLXMLDownloader.py --tslFile="$TSL_FILES_DIRECTORY/eu-lotl.xml" --tslTestFile="$TSL_FILES_DIRECTORY/$(basename ${{ inputs.defaultCentralConfigurationTslUrl_input }})" --countries="${{ inputs.memberTsl_input }}" --isDevBuild="True"
            fi

            echo "Finished downloading TSL"
          else
            echo "Getting TSL (remote LOTL)"
            python3 scripts/TSLXMLDownloader.py --tslTestFile="$TSL_FILES_DIRECTORY/$(basename 'https://ec.europa.eu/tools/lotl/eu-lotl.xml')" --countries="${{ inputs.memberTsl_input }}" --isDevBuild="True"
            echo "Finished downloading TSL"
          fi

          echo "Moving TSLs to app's TSL files directory"
          mv -v scripts/TSL/* $TSL_FILES_DIRECTORY
          echo "Done moving TSLs"
      - name: Fetch default configuration
        script: |
          # Not running 'SetupConfiguration' for repo.ria as necessary files are already setup
          if [[ ! "${{ inputs.defaultCentralConfigurationTslUrl_input }}" == *"10.1.24.31"* ]]; then
            echo "Cleaning swift-sh cache"
            swift-sh --clean-cache
            echo "Fetching default configuration"
            swift-sh MoppApp/SetupConfiguration/Sources/main.swift ${{ inputs.defaultCentralConfigurationUrl_input }} ${{ inputs.defaultCentralConfigurationUpdateInterval_input }} ${{ inputs.defaultCentralConfigurationTslUrl_input }}
            
            mv -v defaultConfiguration.json $CONFIG_DIRECTORY/
            mv -v config.json $CONFIG_DIRECTORY/
            mv -v publicKey.pub $CONFIG_DIRECTORY/
            mv -v signature.rsa $CONFIG_DIRECTORY/
          else
            echo "Skipping default configuration fetching for repo.ria"
          fi
      - name: Set up provisioning profiles settings on Xcode project
        script: xcode-project use-profiles
      - name: Increment build number
        script: |
          cd $CM_BUILD_DIR/MoppApp
          LATEST_BUILD_NUMBER=$(app-store-connect get-latest-testflight-build-number --pre-release-version $APP_VERSION $APP_STORE_APP_ID)
          LATEST_BUILD_NUMBER=$((LATEST_BUILD_NUMBER + 1))
          echo "LATEST_BUILD_NUMBER=$LATEST_BUILD_NUMBER" >> $CM_ENV
          agvtool new-version -all "$LATEST_BUILD_NUMBER"
      - name: Build RIA DigiDoc
        script: |
          export OTHER_BUILD_FLAGS="OTHER_SWIFT_FLAGS=${{ inputs.buildParameters_input }}"
          
          # Skip fetching configuration for repo.ria as necessary files are already setup
          REPO_RIA_CONF_FLAGS=""
          if [[ "${{ inputs.defaultCentralConfigurationTslUrl_input }}" == *"10.1.24.31"* ]]; then
            REPO_RIA_CONF_FLAGS="DEFAULT_CENTRAL_CONFIGURATION_URL='' DEFAULT_CENTRAL_CONFIGURATION_UPDATE_INTERVAL=4 DEFAULT_CENTRAL_CONFIGURATION_TSL_URL=''"
          fi
          
          ARCHIVE_FLAGS="$OTHER_BUILD_FLAGS $REPO_RIA_CONF_FLAGS"
          
          xcode-project build-ipa \
            --clean \
            --project "$CM_BUILD_DIR/MoppApp/MoppApp.xcodeproj" \
            --scheme "$XCODE_SCHEME" \
            --archive-xcargs "$ARCHIVE_FLAGS" \
            --export-xcargs "$OTHER_BUILD_FLAGS"
      - name: Rename and move IPA
        script: |
          mv -v build/ios/ipa/MoppApp.ipa build/ios/ipa/"MOPP2_dev_$APP_VERSION.$LATEST_BUILD_NUMBER.ipa"
      - name: Generate release notes for TestFlight
        script: |
          cat <<EOF > release_notes.json
          [
            {
              "language": "en-GB",
              "text": "Branch: $CM_BRANCH \\nMode: dev"
            },
            {
              "language": "en-US",
              "text": "Branch: $CM_BRANCH \\nMode: dev"
            }
          ]
          EOF
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - marten.rebane@nortal.com
        notify:
          success: true
          failure: true
      app_store_connect:
        auth: integration
        submit_to_testflight: false

  release:
    name: RIA DigiDoc (MOPP2) release
    max_build_duration: 120
    instance_type: mac_mini_m2
    integrations:
      app_store_connect: Codemagic MOPP
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: ee.ria.digidoc
      groups:
        - "google_services"
      vars:
        BUNDLE_ID: "ee.ria.digidoc"
        XCODE_SCHEME: "MoppApp"
        APP_STORE_APPLE_ID: ET847QJV9F
        CONFIG_DIRECTORY: "MoppApp/MoppApp"
        APP_STORE_APP_ID: 1216104448
      xcode: latest
    scripts:
      - name: Setup dependencies
        script: |
          brew install swift-sh
      - *get_app_version
      - *get_google_services_plist
      - name: "Setup config and TSL files"
        script: |
          export TSL_FILES_DIRECTORY="$CONFIG_DIRECTORY/tslFiles.bundle"

          # Create config and TSL folders
          mkdir -p $TSL_FILES_DIRECTORY

          # Remove current files in tslFiles.bundle
          echo "Removing current TSL files"
          find $TSL_FILES_DIRECTORY -mindepth 1 ! -name ".gitignore" -delete

          # Download latest 'eu-lotl.xml' file"
          echo "Downloading latest 'eu-lotl.xml' file"
          wget "https://ec.europa.eu/tools/lotl/eu-lotl.xml" -P $TSL_FILES_DIRECTORY
          
          if [ -f "$TSL_FILES_DIRECTORY/eu-lotl.xml" ]; then
            echo "Getting TSL (local LOTL)"
            python3 scripts/TSLXMLDownloader.py --tslFile="$TSL_FILES_DIRECTORY/eu-lotl.xml" --tslTestFile="$TSL_FILES_DIRECTORY/$(basename 'https://ec.europa.eu/tools/lotl/eu-lotl.xml')" --countries="EE" --isDevBuild="False"

            echo "Finished downloading TSL"
          else
            echo "Getting TSL (remote LOTL)"
            python3 scripts/TSLXMLDownloader.py --tslTestFile="$TSL_FILES_DIRECTORY/$(basename 'https://ec.europa.eu/tools/lotl/eu-lotl.xml')" --countries="EE" --isDevBuild="False"
            echo "Finished downloading TSL"
          fi

          echo "Moving TSLs to app's TSL files directory"
          mv -v scripts/TSL/* $TSL_FILES_DIRECTORY
          echo "Done moving TSLs"
      - name: Fetch default configuration
        script: |
          echo "Cleaning swift-sh cache"
          swift-sh --clean-cache
          echo "Fetching default configuration"
          swift-sh MoppApp/SetupConfiguration/Sources/main.swift "https://id.eesti.ee" 4 "https://ec.europa.eu/tools/lotl/eu-lotl.xml"

          mv -v defaultConfiguration.json $CONFIG_DIRECTORY/
          mv -v config.json $CONFIG_DIRECTORY/
          mv -v publicKey.pub $CONFIG_DIRECTORY/
          mv -v signature.rsa $CONFIG_DIRECTORY/
      - name: Set up provisioning profiles settings on Xcode project
        script: xcode-project use-profiles
      - name: Increment build number
        script: |
          cd $CM_BUILD_DIR/MoppApp
          LATEST_BUILD_NUMBER=$(app-store-connect get-latest-build-number $APP_STORE_APP_ID)
          echo LATEST_BUILD_NUMBER=$LATEST_BUILD_NUMBER >> $CM_ENV
          agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
      - name: Build RIA DigiDoc
        script: |
          xcode-project build-ipa \
            --clean \
            --project "$CM_BUILD_DIR/MoppApp/MoppApp.xcodeproj" \
            --scheme "$XCODE_SCHEME"
      - name: Rename and move IPA
        script: |
          mv -v build/ios/ipa/MoppApp.ipa build/ios/ipa/"MOPP2_release_$APP_VERSION.$LATEST_BUILD_NUMBER.ipa"
      - name: Generate release notes for TestFlight
        script: |
          cat <<EOF > release_notes.json
          [
            {
              "language": "en-GB",
              "text": "Branch: $CM_BRANCH \\nMode: release \\nApp: MOPP2"
            },
            {
              "language": "en-US",
              "text": "Branch: $CM_BRANCH \\nMode: release \\nApp: MOPP2"
            }
          ]
          EOF
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - marten.rebane@nortal.com
        notify:
          success: true
          failure: true
      app_store_connect:
        auth: integration
        submit_to_testflight: false
